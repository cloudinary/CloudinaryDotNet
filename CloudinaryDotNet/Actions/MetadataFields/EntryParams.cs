namespace CloudinaryDotNet.Actions
{
    using System.Collections.Generic;

    /// <summary>
    /// Defines a single possible value for the field.
    /// </summary>
    public class EntryParams : BaseParams
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EntryParams"/> class.
        /// </summary>
        /// <param name="value">The datasource value.</param>
        public EntryParams(string value)
        {
            Value = value;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="EntryParams"/> class.
        /// </summary>
        /// <param name="value">The datasource value.</param>
        /// <param name="externalId">Unique identifier of the datasource entry.</param>
        public EntryParams(string value, string externalId)
        {
            ExternalId = externalId;
            Value = value;
        }

        /// <summary>
        /// Gets or sets a unique immutable identification string for the datasource entry,
        /// (required if the value is referenced by the default_value field).
        /// Default: auto-generated by Cloudinary (optional).
        /// </summary>
        public string ExternalId { get; set; }

        /// <summary>
        /// Gets or sets the value for this datasource.
        /// </summary>
        public string Value { get; set; }

        /// <summary>
        /// Validates object model.
        /// </summary>
        public override void Check()
        {
            Utils.ShouldNotBeEmpty(() => Value);
        }

        /// <summary>
        /// Add parameters to the object model dictionary.
        /// </summary>
        /// <param name="dict">Dictionary to be updated with parameters.</param>
        protected override void AddParamsToDictionary(SortedDictionary<string, object> dict)
        {
            base.AddParamsToDictionary(dict);
            dict.Add("value", Value);
            if (!string.IsNullOrEmpty(ExternalId))
            {
                dict.Add("external_id", ExternalId);
            }
        }
    }
}