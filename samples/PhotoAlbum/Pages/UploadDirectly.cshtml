@page
@model PhotoAlbum.Pages.UploadDirectlyModel

@{
    ViewData["Title"] = "PhotoAlbum - Direct Upload page";
}

<!-- A form for direct uploading using a jQuery plug-in.
          The BuildUploadForm method generates the required HTML and JavaScript to
          allow uploading directly from the browser to your Cloudinary account -->
<div id="direct_upload" class="container-fluid mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <h1 class="text-center mb-4">Direct Upload from the Browser</h1>

            <div class="card shadow-sm">
                <div class="card-body">
                    <form class="form-group">
                        @Html.AntiForgeryToken()

                        <div class="mb-3">
                            @if (Model.DirectUploadType == DirectUploadType.Signed)
                            {
                                @Html.Raw(Cloudinary.Api.BuildUploadForm("test-field", "auto", new SortedDictionary<string, object> { { "tags", UploadDirectlyModel.Tags } }, new Dictionary<string, string> { { "multiple", "true" } }))
                            }
                            else
                            {
                                @Html.Raw(Cloudinary.Api.BuildUnsignedUploadForm("test-field", Model.Preset, "image", new SortedDictionary<string, object> { { "tags", UploadDirectlyModel.Tags } }, new Dictionary<string, string> { { "multiple", "true" } }))
                            }
                        </div>
                    </form>
                </div>
            </div>

            <!-- Status box -->
            <div class="card mt-4 shadow-sm">
                <div class="card-body text-center">
                    <h2>Status</h2>
                    <span class="status_value fs-4 text-muted">Idle</span>
                </div>
            </div>

            <!-- Uploaded info -->
            <div class="uploaded_info_holder mt-4"></div>

            <!-- Back to list -->
            <div class="text-center mt-4">
                <a asp-page="Index" class="btn btn-link">Back to list...</a>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    @Html.Raw(Cloudinary.GetCloudinaryJsConfig(dir: "js"))

<script>
    $(function () {

            function prettydump(obj) {
                ret = ""
                $.each(obj, function (key, value) {
                    ret += "<tr><td>" + key + "</td><td>" + value + "</td></tr>";
                });

                return ret;
            }

            $('.cloudinary-fileupload').fileupload({
                dropZone: '#direct_upload',
                start: function () {
                    $('.status_value').text('Starting direct upload...');
                },
                progress: function () {
                    $('.status_value').text('Uploading...');
                },
            })
            .bind('fileuploaddone', function (e, data) {
                $('.status_value').text('Idle');

                $.ajax({
                    type: "POST",
                    url: '@Url.Page("/UploadDirectly")',
                    data: JSON.stringify(data.result),
                    contentType: 'application/json; charset=utf-8',
                    headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()}
                });

                var info = $('<div class="uploaded_info"/>');
                $(info).append($('<div class="data"/>').append(prettydump(data.result)));
                $(info).append($('<div class="image"/>').append(
                  $.cloudinary.image(data.result.public_id, {
                      format: data.result.format,
                      width: 150,
                      height: 150,
                      crop: "fill"
                  })
                ));
                $('.uploaded_info_holder').append(info);
            })
            .bind('fileuploadfail', function (e, data) {
                $('.status_value').text('Upload error!');
            });
        });
</script>
}
